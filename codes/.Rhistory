{
ds_quartiles <- c(ds_quartiles, 'Newer old')
}
else
{
ds_quartiles <- c(ds_quartiles, 'Old')
}
}
df <- data.frame(ds_quartiles, dii)
df$ds_quartiles <- factor(df$ds_quartiles,levels = c("New", "Older new", "Newer old", "Old"),ordered = TRUE)
ggplot(df)+geom_violin(aes(x=ds_quartiles,y=dii,group=ds_quartiles),color="black",fill="grey",size=2)+
theme(axis.text.x=element_text(colour="black"), axis.text.y=element_text(colour="black"))   # build the base violins
#http://stackoverflow.com/questions/22278951/combining-violin-plot-with-box-plot
require(ggplot2)
require(stringr)
# require(dplyr)
diipath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/dii"
dspath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/ds"
list_of_files <- list.files(path=dspath, pattern="*.txt", full.names=F, recursive=FALSE)
dii <- c()
ds <- c()
genes <- c()
for (filename in list_of_files)
{
dii_tbl <- read.table(paste(diipath,'/',filename,sep = ''), sep = '\t', header = FALSE)
ds_tbl <- read.table(paste(dspath,'/',filename,sep = ''), sep = '\t', header = FALSE)
for (i in seq(1,nrow(dii_tbl)))
{
if (i+2 <= ncol(dii_tbl))
{
for (j in seq(i+2, ncol(dii_tbl)))
{
if (dii_tbl[i,j] != -1 & str_match(dii_tbl[i,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2] ==
str_match(dii_tbl[j-1,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2])
{
dii <- c(dii, dii_tbl[i,j])
ds <- c(ds, ds_tbl[i,j])
genes <- rbind(genes, c(str_match(dii_tbl[i,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2],
str_match(dii_tbl[j-1,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2]))
}
}
}
}
}
plot(ds, dii)
ds_quartiles <- c()
thresholds <- quantile(ds)
for (value in ds)
{
if (value < thresholds[2])
{
ds_quartiles <- c(ds_quartiles, 'New')
}
else if (value < thresholds[3])
{
ds_quartiles <- c(ds_quartiles, 'Older new')
}
else if (value < thresholds[4])
{
ds_quartiles <- c(ds_quartiles, 'Newer old')
}
else
{
ds_quartiles <- c(ds_quartiles, 'Old')
}
}
df <- data.frame(ds_quartiles, dii)
df$ds_quartiles <- factor(df$ds_quartiles,levels = c("New", "Older new", "Newer old", "Old"),ordered = TRUE)
ggplot(df)+geom_violin(aes(x=ds_quartiles,y=dii,group=ds_quartiles),color="black",fill="grey",size=2)+
theme(axis.text.x=element_text(colour="black"), axis.text.y=element_text(colour="black"))   # build the base violins
#http://stackoverflow.com/questions/22278951/combining-violin-plot-with-box-plot
View(dii_tbl)
View(ds_tbl)
require(ggplot2)
require(stringr)
# require(dplyr)
diipath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/dii"
dspath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/ds"
list_of_files <- list.files(path=dspath, pattern="*.txt", full.names=F, recursive=FALSE)
dii <- c()
ds <- c()
genes <- c()
for (filename in list_of_files)
{
dii_tbl <- read.table(paste(diipath,'/',filename,sep = ''), sep = '\t', header = FALSE)
ds_tbl <- read.table(paste(dspath,'/',filename,sep = ''), sep = '\t', header = FALSE)
for (i in seq(1,nrow(dii_tbl)))
{
if (i+2 <= ncol(dii_tbl))
{
for (j in seq(i+2, ncol(dii_tbl)))
{
if (dii_tbl[i,j] != -1 & str_match(dii_tbl[i,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2] ==
str_match(dii_tbl[j-1,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2])
{
dii <- c(dii, dii_tbl[i,j])
ds <- c(ds, ds_tbl[i,j])
genes <- rbind(genes, c(dii_tbl[i,1], dii_tbl[j-1,1]))
}
}
}
}
}
plot(ds, dii)
ds_quartiles <- c()
thresholds <- quantile(ds)
for (value in ds)
{
if (value < thresholds[2])
{
ds_quartiles <- c(ds_quartiles, 'New')
}
else if (value < thresholds[3])
{
ds_quartiles <- c(ds_quartiles, 'Older new')
}
else if (value < thresholds[4])
{
ds_quartiles <- c(ds_quartiles, 'Newer old')
}
else
{
ds_quartiles <- c(ds_quartiles, 'Old')
}
}
df <- data.frame(ds_quartiles, dii)
df$ds_quartiles <- factor(df$ds_quartiles,levels = c("New", "Older new", "Newer old", "Old"),ordered = TRUE)
ggplot(df)+geom_violin(aes(x=ds_quartiles,y=dii,group=ds_quartiles),color="black",fill="grey",size=2)+
theme(axis.text.x=element_text(colour="black"), axis.text.y=element_text(colour="black"))   # build the base violins
#http://stackoverflow.com/questions/22278951/combining-violin-plot-with-box-plot
require(ggplot2)
require(stringr)
# require(dplyr)
diipath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/dii"
dspath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/ds"
list_of_files <- list.files(path=dspath, pattern="*.txt", full.names=F, recursive=FALSE)
dii <- c()
ds <- c()
genes <- c()
for (filename in list_of_files)
{
dii_tbl <- read.table(paste(diipath,'/',filename,sep = ''), sep = '\t', header = FALSE)
ds_tbl <- read.table(paste(dspath,'/',filename,sep = ''), sep = '\t', header = FALSE)
for (i in seq(1,nrow(dii_tbl)))
{
if (i+2 <= ncol(dii_tbl))
{
for (j in seq(i+2, ncol(dii_tbl)))
{
if (dii_tbl[i,j] != -1 & str_match(dii_tbl[i,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2] ==
str_match(dii_tbl[j-1,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2])
{
dii <- c(dii, dii_tbl[i,j])
ds <- c(ds, ds_tbl[i,j])
#genes <- rbind(genes, c(dii_tbl[i,1], dii_tbl[j-1,1]))
}
}
}
}
}
plot(ds, dii)
ds_quartiles <- c()
thresholds <- quantile(ds)
for (value in ds)
{
if (value < thresholds[2])
{
ds_quartiles <- c(ds_quartiles, 'New')
}
else if (value < thresholds[3])
{
ds_quartiles <- c(ds_quartiles, 'Older new')
}
else if (value < thresholds[4])
{
ds_quartiles <- c(ds_quartiles, 'Newer old')
}
else
{
ds_quartiles <- c(ds_quartiles, 'Old')
}
}
df <- data.frame(ds_quartiles, dii)
df$ds_quartiles <- factor(df$ds_quartiles,levels = c("New", "Older new", "Newer old", "Old"),ordered = TRUE)
ggplot(df)+geom_violin(aes(x=ds_quartiles,y=dii,group=ds_quartiles),color="black",fill="grey",size=2)+
theme(axis.text.x=element_text(colour="black"), axis.text.y=element_text(colour="black"))   # build the base violins
#http://stackoverflow.com/questions/22278951/combining-violin-plot-with-box-plot
View(dii_tbl)
View(ds_tbl)
require(ggplot2)
require(stringr)
# require(dplyr)
diipath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/dii"
dspath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/ds"
list_of_files <- list.files(path=dspath, pattern="*.txt", full.names=F, recursive=FALSE)
dii <- c()
ds <- c()
genes <- c()
for (filename in list_of_files)
{
dii_tbl <- read.table(paste(diipath,'/',filename,sep = ''), sep = '\t', header = FALSE)
ds_tbl <- read.table(paste(dspath,'/',filename,sep = ''), sep = '\t', header = FALSE)
for (i in seq(1,nrow(dii_tbl)))
{
if (i+2 <= ncol(dii_tbl))
{
for (j in seq(i+2, ncol(dii_tbl)))
{
if (dii_tbl[i,j] != -1 & str_match(dii_tbl[i,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2] ==
str_match(dii_tbl[j-1,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2])
{
dii <- c(dii, dii_tbl[i,j])
ds <- c(ds, ds_tbl[i,j])
#genes <- rbind(genes, c(dii_tbl[i,1], dii_tbl[j-1,1]))
}
}
}
}
}
plot(ds, dii)
ds_quartiles <- c()
thresholds <- quantile(ds)
for (value in ds)
{
if (value < thresholds[2])
{
ds_quartiles <- c(ds_quartiles, 'New')
}
else if (value < thresholds[3])
{
ds_quartiles <- c(ds_quartiles, 'Older new')
}
else if (value < thresholds[4])
{
ds_quartiles <- c(ds_quartiles, 'Newer old')
}
else
{
ds_quartiles <- c(ds_quartiles, 'Old')
}
}
df <- data.frame(ds_quartiles, dii)
df$ds_quartiles <- factor(df$ds_quartiles,levels = c("New", "Older new", "Newer old", "Old"),ordered = TRUE)
ggplot(df)+geom_violin(aes(x=ds_quartiles,y=dii,group=ds_quartiles),color="black",fill="grey",size=2)+
theme(axis.text.x=element_text(colour="black"), axis.text.y=element_text(colour="black"))   # build the base violins
#http://stackoverflow.com/questions/22278951/combining-violin-plot-with-box-plot
require(ggplot2)
require(stringr)
# require(dplyr)
diipath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/dii"
dspath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/ds"
list_of_files <- list.files(path=dspath, pattern="*.txt", full.names=F, recursive=FALSE)
dii <- c()
ds <- c()
for (filename in list_of_files)
{
dii_tbl <- read.table(paste(diipath,'/',filename,sep = ''), sep = '\t', header = FALSE)
ds_tbl <- read.table(paste(dspath,'/',filename,sep = ''), sep = '\t', header = FALSE)
for (i in seq(1,nrow(dii_tbl)))
{
if (i+2 <= ncol(dii_tbl))
{
for (j in seq(i+2, ncol(dii_tbl)))
{
if (dii_tbl[i,j] != -1 & str_match(dii_tbl[i,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2] ==
str_match(dii_tbl[j-1,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2])
{
dii <- c(dii, dii_tbl[i,j])
ds <- c(ds, ds_tbl[i,j])
}
}
}
}
}
plot(ds, dii)
ds_quartiles <- c()
thresholds <- quantile(ds)
for (value in ds)
{
if (value < thresholds[2])
{
ds_quartiles <- c(ds_quartiles, 'New')
}
else if (value < thresholds[3])
{
ds_quartiles <- c(ds_quartiles, 'Older new')
}
else if (value < thresholds[4])
{
ds_quartiles <- c(ds_quartiles, 'Newer old')
}
else
{
ds_quartiles <- c(ds_quartiles, 'Old')
}
}
df <- data.frame(ds_quartiles, dii)
df$ds_quartiles <- factor(df$ds_quartiles,levels = c("New", "Older new", "Newer old", "Old"),ordered = TRUE)
ggplot(df)+geom_violin(aes(x=ds_quartiles,y=dii,group=ds_quartiles),color="black",fill="grey",size=2)+
theme(axis.text.x=element_text(colour="black"), axis.text.y=element_text(colour="black"))   # build the base violins
#http://stackoverflow.com/questions/22278951/combining-violin-plot-with-box-plot
require(ggplot2)
require(stringr)
# require(dplyr)
diipath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/dii"
dspath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/ds"
list_of_files <- list.files(path=dspath, pattern="*.txt", full.names=F, recursive=FALSE)
dii <- c()
ds <- c()
genes <- c()
for (filename in list_of_files)
{
dii_tbl <- read.table(paste(diipath,'/',filename,sep = ''), sep = '\t', header = FALSE)
ds_tbl <- read.table(paste(dspath,'/',filename,sep = ''), sep = '\t', header = FALSE)
for (i in seq(1,nrow(dii_tbl)))
{
if (i+2 <= ncol(dii_tbl))
{
for (j in seq(i+2, ncol(dii_tbl)))
{
if (dii_tbl[i,j] != -1 & str_match(dii_tbl[i,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2] ==
str_match(dii_tbl[j-1,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2])
{
dii <- c(dii, dii_tbl[i,j])
ds <- c(ds, ds_tbl[i,j])
genes <- rbind(genes, c(dii_tbl[i,1], dii_tbl[j-1,1]))
}
}
}
}
}
plot(ds, dii)
ds_quartiles <- c()
thresholds <- quantile(ds)
for (value in ds)
{
if (value < thresholds[2])
{
ds_quartiles <- c(ds_quartiles, 'New')
}
else if (value < thresholds[3])
{
ds_quartiles <- c(ds_quartiles, 'Older new')
}
else if (value < thresholds[4])
{
ds_quartiles <- c(ds_quartiles, 'Newer old')
}
else
{
ds_quartiles <- c(ds_quartiles, 'Old')
}
}
df <- data.frame(ds_quartiles, dii)
df$ds_quartiles <- factor(df$ds_quartiles,levels = c("New", "Older new", "Newer old", "Old"),ordered = TRUE)
ggplot(df)+geom_violin(aes(x=ds_quartiles,y=dii,group=ds_quartiles),color="black",fill="grey",size=2)+
theme(axis.text.x=element_text(colour="black"), axis.text.y=element_text(colour="black"))   # build the base violins
#http://stackoverflow.com/questions/22278951/combining-violin-plot-with-box-plot
dii_tbl <- read.table(paste(diipath,'/',filename,sep = ''), sep = '\t', header = FALSE)
require(ggplot2)
require(stringr)
# require(dplyr)
diipath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/dii"
dspath <- "~/TraDIS/EnTrI-on-real-data/homclust-with-outgroups/deltaii-vs-distance/ds"
list_of_files <- list.files(path=dspath, pattern="*.txt", full.names=F, recursive=FALSE)
dii <- c()
ds <- c()
genes <- c()
for (filename in list_of_files)
{
if file.exists(paste(diipath,'/',filename,sep = ''))
{
dii_tbl <- read.table(paste(diipath,'/',filename,sep = ''), sep = '\t', header = FALSE)
ds_tbl <- read.table(paste(dspath,'/',filename,sep = ''), sep = '\t', header = FALSE)
for (i in seq(1,nrow(dii_tbl)))
{
if (i+2 <= ncol(dii_tbl))
{
for (j in seq(i+2, ncol(dii_tbl)))
{
if (dii_tbl[i,j] != -1 & str_match(dii_tbl[i,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2] ==
str_match(dii_tbl[j-1,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2])
{
dii <- c(dii, dii_tbl[i,j])
ds <- c(ds, ds_tbl[i,j])
genes <- rbind(genes, c(dii_tbl[i,1], dii_tbl[j-1,1]))
}
}
}
}
}}
plot(ds, dii)
ds_quartiles <- c()
thresholds <- quantile(ds)
for (value in ds)
{
if (value < thresholds[2])
{
ds_quartiles <- c(ds_quartiles, 'New')
}
else if (value < thresholds[3])
{
ds_quartiles <- c(ds_quartiles, 'Older new')
}
else if (value < thresholds[4])
{
ds_quartiles <- c(ds_quartiles, 'Newer old')
}
else
{
ds_quartiles <- c(ds_quartiles, 'Old')
}
}
df <- data.frame(ds_quartiles, dii)
df$ds_quartiles <- factor(df$ds_quartiles,levels = c("New", "Older new", "Newer old", "Old"),ordered = TRUE)
ggplot(df)+geom_violin(aes(x=ds_quartiles,y=dii,group=ds_quartiles),color="black",fill="grey",size=2)+
theme(axis.text.x=element_text(colour="black"), axis.text.y=element_text(colour="black"))   # build the base violins
#http://stackoverflow.com/questions/22278951/combining-violin-plot-with-box-plot
require(ggplot2)
require(stringr)
# require(dplyr)
diipath <- "~/EnTrI/results/duplication_distance_calculator/deltaiis/"
dspath <- "~/EnTrI/results/duplication_distance_calculator/distances/"
list_of_files <- list.files(path=dspath, pattern="*.txt", full.names=F, recursive=FALSE)
dii <- c()
ds <- c()
genes <- c()
for (filename in list_of_files)
{
dii_tbl <- read.table(paste(diipath,'/',filename,sep = ''), sep = '\t', header = FALSE)
ds_tbl <- read.table(paste(dspath,'/',filename,sep = ''), sep = '\t', header = FALSE)
for (i in seq(1,nrow(dii_tbl)))
{
if (i+2 <= ncol(dii_tbl))
{
for (j in seq(i+2, ncol(dii_tbl)))
{
if (dii_tbl[i,j] != -1 & str_match(dii_tbl[i,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2] ==
str_match(dii_tbl[j-1,1], "([[:graph:]]*)\\_[[:digit:]]+\\-[[:digit:]]+")[2])
{
dii <- c(dii, dii_tbl[i,j])
ds <- c(ds, ds_tbl[i,j])
genes <- rbind(genes, c(dii_tbl[i,1], dii_tbl[j-1,1]))
}
}
}
}
}
pdf("../results/distance-vs-deltaii.pdf")
regln <- lm(dii~ds)
plot(ds, dii)
abline(regln, col="red")
lines(lowess(dii, ds, f = .2), col = 2, lwd=5)
lines(lowess(ds, dii, f = .2), col = 2, lwd=5)
?legend
biasespath <- "../results/check-biases.out"
biasestable = read.table(biasespath, header = FALSE)
colnames(biasestable) <- c("name", "ii", "dist", "gc")
#pdf("../results/biases.pdf")
mar.default <- c(5,4,4,2) + 0.1
par(mar = mar.default + c(0, 1, 0, 0))
plot(biasestable$dist, biasestable$ii, pch = '.', ylim=c(0,3), xlab = "Distance from the origin", ylab = "insertion index",
main = "Distance bias", cex.lab = 2, cex.axis = 2, cex.main =2)
lines(lowess(biasestable$dist, biasestable$ii, f = 0.2), col = 2, lwd=5)
legend(0.35,2.8,c("regression line", "lowess"), col = c(3,2), lty=1, lwd=5, cex = 2)
regln <- lm(biasestable$dist ~ biasestable$ii)
abline(regln, col=3, lwd=5)
plot(biasestable$gc, biasestable$ii, pch = '.', ylim=c(0,3), xlab = "GC content", ylab = "insertion index", main = "GC bias",
cex.lab = 2, cex.axis = 2, cex.main =2)
# lines(lowess(biasestable$gc, biasestable$ii, f = 0.2), col = 2, lwd=5)
regln <- lm(biasestable$gc ~ biasestable$ii)
abline(regln, col=3, lwd=5)
#dev.off()
setwd("~/EnTrI/codes")
legend(0.35,2.8,c("regression line", "lowess"), col = c(3,2), lty=1, lwd=5, cex = 2)
biasespath <- "../results/check-biases.out"
biasestable = read.table(biasespath, header = FALSE)
colnames(biasestable) <- c("name", "ii", "dist", "gc")
#pdf("../results/biases.pdf")
mar.default <- c(5,4,4,2) + 0.1
par(mar = mar.default + c(0, 1, 0, 0))
plot(biasestable$dist, biasestable$ii, pch = '.', ylim=c(0,3), xlab = "Distance from the origin", ylab = "insertion index",
main = "Distance bias", cex.lab = 2, cex.axis = 2, cex.main =2)
lines(lowess(biasestable$dist, biasestable$ii, f = 0.2), col = 2, lwd=5)
legend(0.35,2.8,c("regression line", "lowess"), col = c(3,2), lty=1, lwd=5, cex = 2)
regln <- lm(biasestable$dist ~ biasestable$ii)
abline(regln, col=3, lwd=5)
plot(biasestable$gc, biasestable$ii, pch = '.', ylim=c(0,3), xlab = "GC content", ylab = "insertion index", main = "GC bias",
cex.lab = 2, cex.axis = 2, cex.main =2)
# lines(lowess(biasestable$gc, biasestable$ii, f = 0.2), col = 2, lwd=5)
regln <- lm(biasestable$gc ~ biasestable$ii)
abline(regln, col=3, lwd=5)
#dev.off()
biasespath <- "../results/check-biases.out"
biasestable = read.table(biasespath, header = FALSE)
colnames(biasestable) <- c("name", "ii", "dist", "gc")
#pdf("../results/biases.pdf")
mar.default <- c(5,4,4,2) + 0.1
par(mar = mar.default + c(0, 1, 0, 0))
plot(biasestable$dist, biasestable$ii, pch = '.', ylim=c(0,3), xlab = "Distance from the origin", ylab = "insertion index",
main = "Distance bias", cex.lab = 2, cex.axis = 2, cex.main =2)
lines(lowess(biasestable$dist, biasestable$ii, f = 0.2), col = 2, lwd=5)
legend(0.3,2.8,c("regression line", "lowess"), col = c(3,2), lty=1, lwd=5, cex = 1.5)
regln <- lm(biasestable$dist ~ biasestable$ii)
abline(regln, col=3, lwd=5)
plot(biasestable$gc, biasestable$ii, pch = '.', ylim=c(0,3), xlab = "GC content", ylab = "insertion index", main = "GC bias",
cex.lab = 2, cex.axis = 2, cex.main =2)
# lines(lowess(biasestable$gc, biasestable$ii, f = 0.2), col = 2, lwd=5)
regln <- lm(biasestable$gc ~ biasestable$ii)
abline(regln, col=3, lwd=5)
#dev.off()
legend(0.28,2.8,c("regression line", "lowess"), col = c(3,2), lty=1, lwd=5, cex = 1.5)
