============ CLUSTER PROTEINS
1. Convert gff + fasta files to embl using seqret tool from EMBOSS package (If the fasta and gff files contain chromosome and plasmid sequences, separate them)
	seqret -sequence CS17p1.fna -feature -fformat gff -fopenfile CS17p1.gff -osformat embl -auto
2. If the CDS IDs are not standard (like in CS17p1-4 in our case):
	sed -i -e 's/CS17p1|SC|contig000001://g' CS17p1.embl
3. Remove locus tag "ERS227112_02466:gene" from "Klebsiella_pneumoniae_RH201207_v0.3.embl" embl file. This gene has two locus tags: "ERS227112_02466" and "ERS227112_02466:gene", which probably is a mistake in annotation, and the ":gene" at the end of this tag causes jackhmmer name this gene "gene" which is impossible to track.
4.a. Convert embl files to protein fasta files
	cd codes
	for filename in ../sequences/embl/chromosome/*.embl; do embl2peptides.py $filename ../sequences/fasta-protein/chromosome/"$(basename $filename | cut -d. -f1).fasta"; done
4.b. As the translations in Escherichia_coli_9000_v0.1.embl are not correct, run the following command: (In this way the translations in the embl file are ignored and we do the translation ourselves)
	embl2peptides.py --notranslation ../sequences/embl/chromosome/Escherichia_coli_9000_v0.1.embl ../sequences/fasta-protein/chromosome/Escherichia_coli_9000_v0.fasta
5. Make a fasta file with all sequences in it.
	cd sequences/fasta-protein/chromosome
	cat * > seqdb.fasta
6. Run homclust to cluster homologous proteins
	cd codes
	homclust.py ../sequences/fasta-protein/chromosome/Citrobacter_rodentium_ICC168_FN543502_v1.fasta ../sequences/fasta-protein/chromosome/seqdb.fasta ../results/homclust -ns 14 -s 4

============ STUDY CLUSTERS
1. Make a directory for plot files corresponding to the sequences that we have clustered and add the extracted plot files to it. The plot files should be named based on fasta IDs of the sequences. If the fasta IDs contain an underscore, the name of the corresponding plot file = all characters before the underscore. If the name does not contain an underscore, the name of the plot file = all letters before the first digit.

2. Run merge-clust-plot to add insertion indices to genes in clusters
	cd codes
	merge-clust-plot.py ../sequences/fasta-protein/chromosome/seqdb.fasta ../results/homclust/EFam-clusters/ ../sequences/plot-files/chromosome/ ../results/merge-clust-plot
3. Plot cluster size distribution (This is not a general script and can only be used for this case)
	cd codes
	Rscript cluster_size_dist_plot.R
- The resulting file called "cluster-size-dist.pdf" is saved in results directory.
4. Plot the insertion index distribution in different clusters (This is not a general script and can only be used for this case)
	cd codes  
	Rscript clust2plot.R
- The output is a file called "cluster-essentiality.pdf" in results directory.

============ ADD CLUSTERS CONTAINING DNA SEQUENCES
1. Convert embl files to DNA fasta files
	cd codes
	for filename in ../sequences/embl/chromosome/*.embl; do embl2dna.py $filename ../sequences/fasta-dna/chromosome/"$(basename $filename | cut -d. -f1).fasta"; done
2. Make a fasta file with all sequences in it.
	cd sequences/fasta-dna/chromosome
	cat * > seqdb.fasta
3. Make clusters containing DNA fastas
	cd codes
	cluster2dnafasta.py ../sequences/fasta-dna/chromosome/seqdb.fasta ../results/homclust/EFam-clusters ../results/cluster2dnafasta

============ GENERATE THE SPECIES TREE
1. Run make_marker to get marker genes (This is not a general script and can only be used for this case)
	cd codes
	mkdir ../results/make_marker
	make_marker.py ../results/homclust/EFam-fastas/ ../results/cluster2dnafasta/ ../results/make_marker/protein-fastas ../results/make_marker/dna-fastas
2. Align protein sequences
	cd results/make_marker/protein-fastas
	for f in *; do (cat "${f}"; echo) >> seqdb.fasta; done
	mafft seqdb.fasta > markers.align
	fasttree markers.align > speciestree.fasttree

============ STUDY DUPLICATIONS
1. Change the name of the genes to use better names in trees and add essentiality of the genes to their names (This is not a general script and can only be used for this case)
	cd codes
	amend-gene-names.py ../results/homclust/EFam-MSAs/ ../results/merge-clust-plot/final_clusters/ ../results/amend-gene-names
2. Run pal2nal on MSAs
	cd results
	mkdir pal2nal
	for filename in cluster2dnafasta/*; do pal2nal.pl amend-gene-names/"$(basename $filename | cut -d. -f1).msa" $filename -output fasta > /pal2nal/"$(basename $filename | cut -d. -f1).pal2nal"; done
3. Run fasttree on pal2nal results
	cd results
	mkdir genetrees
	for filename in pal2nal/*; do FastTree -nosupport -quiet -nt $filename > genetrees/"$(basename $filename | cut -d. -f1).newick"; done
4. Calculate the distance between duplications and the difference between their insertion indices
	cd codes
	duplication_distance_calculator.py ../results/pal2nal/ ../results/merge-clust-plot/final_clusters/ ../results/duplication_distance_calculator/distances ../results/duplication_distance_calculator/deltaiis
5. Plot distance vs. delta insertion index (This is not a general script and can only be used for this case)
	cd codes
	Rscript plot-distance-vs-deltaii.R
6. Plot the insertion index for each pair of duplicated genes (This is not a general script and can only be used for this case)
	cd codes
	Rscript duplicated-genes-ii.R

============CHECK FOR BIASES
1. Collect DnaA genes and save them in sequences/dnaa/dnaas.fasta (Look for [dnaA] in seqdb.fasta). We need to do steps 2-5 because not all DnaA genes are caught in this step.
2. Do a multiple sequence alignment
	cd sequences/dnaa
	mafft dnaas.fasta > dnaas.align
3. Build a HMM profile
	hmmbuild dnaas.hmm dnaas.align
4. Run hmmserach
	hmmsearch --domtblout dnaas.domtblout dnaas.hmm ../fasta-protein/chromosome/seqdb.fasta
5. Collect the IDs and lengths of strains and the coordinates of their DnaA sequences (the sequences with the highest scores in last step) and save them in sequences/dnaa/dnaa-coordinates.txt
7. Run check-biases
	cd codes
	check-biases.py
############## TO DO:
1.check why notung raises so many errors -> fasttree does not generate binary trees.
